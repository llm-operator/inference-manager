// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// InferenceWorkerServiceClient is the client API for InferenceWorkerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InferenceWorkerServiceClient interface {
}

type inferenceWorkerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInferenceWorkerServiceClient(cc grpc.ClientConnInterface) InferenceWorkerServiceClient {
	return &inferenceWorkerServiceClient{cc}
}

// InferenceWorkerServiceServer is the server API for InferenceWorkerService service.
// All implementations must embed UnimplementedInferenceWorkerServiceServer
// for forward compatibility
type InferenceWorkerServiceServer interface {
	mustEmbedUnimplementedInferenceWorkerServiceServer()
}

// UnimplementedInferenceWorkerServiceServer must be embedded to have forward compatible implementations.
type UnimplementedInferenceWorkerServiceServer struct {
}

func (UnimplementedInferenceWorkerServiceServer) mustEmbedUnimplementedInferenceWorkerServiceServer() {
}

// UnsafeInferenceWorkerServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InferenceWorkerServiceServer will
// result in compilation errors.
type UnsafeInferenceWorkerServiceServer interface {
	mustEmbedUnimplementedInferenceWorkerServiceServer()
}

func RegisterInferenceWorkerServiceServer(s grpc.ServiceRegistrar, srv InferenceWorkerServiceServer) {
	s.RegisterService(&InferenceWorkerService_ServiceDesc, srv)
}

// InferenceWorkerService_ServiceDesc is the grpc.ServiceDesc for InferenceWorkerService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InferenceWorkerService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "llmoperator.inference.server.v1.InferenceWorkerService",
	HandlerType: (*InferenceWorkerServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "api/v1/inference_server_worker.proto",
}
