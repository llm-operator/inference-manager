// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// InferenceEngineInternalServiceClient is the client API for InferenceEngineInternalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InferenceEngineInternalServiceClient interface {
	PullModel(ctx context.Context, in *PullModelRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteModel(ctx context.Context, in *DeleteModelRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ListModels(ctx context.Context, in *ListModelsRequest, opts ...grpc.CallOption) (*ListModelsResponse, error)
}

type inferenceEngineInternalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInferenceEngineInternalServiceClient(cc grpc.ClientConnInterface) InferenceEngineInternalServiceClient {
	return &inferenceEngineInternalServiceClient{cc}
}

func (c *inferenceEngineInternalServiceClient) PullModel(ctx context.Context, in *PullModelRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/llmoperator.inference_engine.v1.InferenceEngineInternalService/PullModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inferenceEngineInternalServiceClient) DeleteModel(ctx context.Context, in *DeleteModelRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/llmoperator.inference_engine.v1.InferenceEngineInternalService/DeleteModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inferenceEngineInternalServiceClient) ListModels(ctx context.Context, in *ListModelsRequest, opts ...grpc.CallOption) (*ListModelsResponse, error) {
	out := new(ListModelsResponse)
	err := c.cc.Invoke(ctx, "/llmoperator.inference_engine.v1.InferenceEngineInternalService/ListModels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InferenceEngineInternalServiceServer is the server API for InferenceEngineInternalService service.
// All implementations must embed UnimplementedInferenceEngineInternalServiceServer
// for forward compatibility
type InferenceEngineInternalServiceServer interface {
	PullModel(context.Context, *PullModelRequest) (*emptypb.Empty, error)
	DeleteModel(context.Context, *DeleteModelRequest) (*emptypb.Empty, error)
	ListModels(context.Context, *ListModelsRequest) (*ListModelsResponse, error)
	mustEmbedUnimplementedInferenceEngineInternalServiceServer()
}

// UnimplementedInferenceEngineInternalServiceServer must be embedded to have forward compatible implementations.
type UnimplementedInferenceEngineInternalServiceServer struct {
}

func (UnimplementedInferenceEngineInternalServiceServer) PullModel(context.Context, *PullModelRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PullModel not implemented")
}
func (UnimplementedInferenceEngineInternalServiceServer) DeleteModel(context.Context, *DeleteModelRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModel not implemented")
}
func (UnimplementedInferenceEngineInternalServiceServer) ListModels(context.Context, *ListModelsRequest) (*ListModelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListModels not implemented")
}
func (UnimplementedInferenceEngineInternalServiceServer) mustEmbedUnimplementedInferenceEngineInternalServiceServer() {
}

// UnsafeInferenceEngineInternalServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InferenceEngineInternalServiceServer will
// result in compilation errors.
type UnsafeInferenceEngineInternalServiceServer interface {
	mustEmbedUnimplementedInferenceEngineInternalServiceServer()
}

func RegisterInferenceEngineInternalServiceServer(s grpc.ServiceRegistrar, srv InferenceEngineInternalServiceServer) {
	s.RegisterService(&InferenceEngineInternalService_ServiceDesc, srv)
}

func _InferenceEngineInternalService_PullModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InferenceEngineInternalServiceServer).PullModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/llmoperator.inference_engine.v1.InferenceEngineInternalService/PullModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InferenceEngineInternalServiceServer).PullModel(ctx, req.(*PullModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InferenceEngineInternalService_DeleteModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InferenceEngineInternalServiceServer).DeleteModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/llmoperator.inference_engine.v1.InferenceEngineInternalService/DeleteModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InferenceEngineInternalServiceServer).DeleteModel(ctx, req.(*DeleteModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InferenceEngineInternalService_ListModels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListModelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InferenceEngineInternalServiceServer).ListModels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/llmoperator.inference_engine.v1.InferenceEngineInternalService/ListModels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InferenceEngineInternalServiceServer).ListModels(ctx, req.(*ListModelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// InferenceEngineInternalService_ServiceDesc is the grpc.ServiceDesc for InferenceEngineInternalService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InferenceEngineInternalService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "llmoperator.inference_engine.v1.InferenceEngineInternalService",
	HandlerType: (*InferenceEngineInternalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PullModel",
			Handler:    _InferenceEngineInternalService_PullModel_Handler,
		},
		{
			MethodName: "DeleteModel",
			Handler:    _InferenceEngineInternalService_DeleteModel_Handler,
		},
		{
			MethodName: "ListModels",
			Handler:    _InferenceEngineInternalService_ListModels_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/inference_engine.proto",
}
